# -*- coding: utf-8 -*-
#
# This file is part of Invenio.
# Copyright (C) 2015, 2016, 2017 CERN.
#
# Invenio is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# Invenio is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Invenio; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307, USA.
#
# In applying this license, CERN does not
# waive the privileges and immunities granted to it by virtue of its status
# as an Intergovernmental Organization or submit itself to any jurisdiction.

# README
# ======
#
# This docker setup will create a demo site which will be run in debug mode.
# It authorizes you to develop code locally, and it will automatically update
# the demo site with your changes.
#
# To do so, you need to have a folder named `../modules` (at the same level
# as the `invenio` directory containing this file). This folder will be
# in the containers in `/modules`. You can develop a module here and pip
# install it in your web container
# (`pip install -Ue /modules/invenio-thingy[all]`).
#
# To start this setup, you need to run the following commands:
# $ docker-compose -f docker-compose-dev.yml build
# $ docker-compose -f docker-compose-dev.yml up [-d]
# $ docker-compose -f docker-compose-dev.yml run --rm web /code/scripts/populate-instance.sh
#
# Then you can access to containers with
# $ docker exec -it invenio_web_1 bash

version: "3"
services:
  web:
    restart: "always"
    build:
      context: .
      args:
        DEBUG: 1
    command: /bin/bash -c "invenio run -h 0.0.0.0"
    environment:
      PATH: "/home/invenio/.virtualenvs/invenio/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      VIRTUALENVWRAPPER_PYTHON: "/usr/local/bin/python"
      INVENIO_WEB_HOST: "127.0.0.1"
      INVENIO_WEB_INSTANCE: "invenio"
      INVENIO_WEB_VENV: "invenio"
      INVENIO_USER_EMAIL: "info@inveniosoftware.org"
      INVENIO_USER_PASS: "uspass123"
      INVENIO_POSTGRESQL_HOST: "postgresql"
      INVENIO_POSTGRESQL_DBNAME: "invenio"
      INVENIO_POSTGRESQL_DBUSER: "invenio"
      INVENIO_POSTGRESQL_DBPASS: "dbpass123"
      INVENIO_REDIS_HOST: "redis"
      INVENIO_ELASTICSEARCH_HOST: "elasticsearch"
      INVENIO_RABBITMQ_HOST: "rabbitmq"
      INVENIO_WORKER_HOST: "127.0.0.1"
    volumes:
      - ../modules:/modules
      - static:/home/invenio/.virtualenvs/invenio/var/instance/static
    links:
      - postgresql
      - redis
      - elasticsearch
      - rabbitmq
    ports:
      - "5000:5000"
    working_dir: "/modules"

  postgresql:
    restart: "always"
    image: postgres
    environment:
      POSTGRES_USER: "invenio"
      POSTGRES_DB: "invenio"
      POSTGRES_PASSWORD: "dbpass123"
    ports:
      - "25432:5432"

  redis:
    restart: "always"
    image: redis
    ports:
      - "26379:6379"

  elasticsearch:
    restart: "always"
    build:
      context: .
      dockerfile: ./elasticsearch/Dockerfile
    ports:
      - "29200:9200"
      - "29300:9300"

  rabbitmq:
    restart: "always"
    image: rabbitmq
    ports:
      - "24369:4369"
      - "45672:25672"

  nginx:
    restart: "always"
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - static:/home/invenio/.virtualenvs/invenio/var/instance/static
    links:
      - web

  static:
    restart: "no"
    build:
      context: .
      args:
        DEBUG: 1
    volumes:
      - static:/home/invenio/.virtualenvs/invenio/var/instance/static
    user: invenio

volumes:
  static:
