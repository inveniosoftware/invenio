# -*- coding: utf-8 -*-
##
## This file is part of Invenio.
## Copyright (C) 2013, 2014 CERN.
##
## Invenio is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## Invenio is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Invenio; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

@persistent_identifier(0)
uuid:
    """
    This is the main persistent identifier of a document and will be used
    internally as this, therefore the pid important should always be '0'.
    """
    schema:
        {'uuid': {'type':'uuid', 'required': True, 'default': lambda: str(__import__('uuid').uuid4())}}
    creator:
        @connect('_id')
        json, 'uuid', value

title:
    """Document title."""
    schema:
        {'title': {
            'type': 'string',
            'default': lambda: __import__('os').path.basename(
                self.get('source', ''))
            }
        }
    creator:
        @parse_first('source')
        json, 'title', value

description:
    """Document description."""
    schema:
        {'description': {'type': 'string'}}

parent:
    """
    Return parent object
    """
    calculated:
        @depends_on('parent_uuid')
        invenio.modules.documents.api.Document.get_document(self.get('parent_uuid'))

parent_uuid:
    """
    FIXME: add checker if not None document_exists(parent_uuid)
    """
    schema:
        {'parent_uuid': {'type':'uuid', 'required': False, 'default': lambda: None}}

source:
    """
    Original file source path.
    """

uri:
    """
    Current file indentification in URI format.
    """

creator:
    """
    Internal user identifier.
    """
    schema:
        {'creator': {'type': 'integer', 'required': True, 'default': lambda: __import__('flask').ext.login.current_user.get_id() }}

deleted:
    """ Is file deleted? """
    schema:
        {'deleted': {'type': 'boolean', 'default': lambda: False}}
