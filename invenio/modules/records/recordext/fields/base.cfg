# -*- coding: utf-8 -*-
##
## This file is part of Invenio.
## Copyright (C) 2013 CERN.
##
## Invenio is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## Invenio is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Invenio; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

@persistent_identifier(0)
recid:
    """ """
    schema:
        {'recid': {'type':'integer', 'min': 1, 'required': True}}
    creator:
        @legacy(('001', ''), )
        @connect('_id')
        marc, '001', int(value)
    producer:
        json_for_marc(), {'001': ''}

@extend
modification_date:
    """
    Date and time of the last modification of the record.

    In marc that means the ``005`` only if the record id, ``001`` is present in
    the input.
    """
    creator:
        @depends_on('recid')
        marc, '005', datetime.datetime(*(time.strptime(value, "%Y%m%d%H%M%S.0")[0:6]))
    derived:
        @depends_on('recid')
        @only_if('modification_date' not in self)
        get_modification_date(self.get('recid', -1))
    producer:
        json_for_marc(), {"005": "self.get('modification_date').strftime('%Y%m%d%H%M%S.0')"}

@extend
creation_date:
    """
    Date and time of the creation of the record.

    In marc, if the record contains a ``005`` tag and not a record id, ``001``
    ``005`` will be considered as creation date.
    """
    creator:
        @parse_first('recid')
        @only_if('recid' not in self)
        marc, '005', datetime.datetime(*(time.strptime(value, "%Y%m%d%H%M%S.0")[0:6]))
    derived:
        @depends_on('recid')
        get_creation_date(self.get('recid', -1))

