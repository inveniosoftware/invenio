# -*- coding: utf-8 -*-
##
## This file is part of Invenio.
## Copyright (C) 2014 CERN.
##
## Invenio is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## Invenio is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Invenio; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

ids:
    """Contains all identifiers, both internal and external.

    Required field for every installation.

    Example:
    +---------+---------------------+
    | 035__a  | orcid               |
    +---------+---------------------+
    | 035__9  | 0000-0001-1234-5678 |
    +---------+---------------------+

    In JSON it is represented as list of dictionaries.
    """
    schema:
        {'ids': {'type': 'list', 'force': True, 'required': True, 'items':
                 {'type': {'type': 'string', 'allowed':
                  __import__('flask').current_app.config['AUTHORS_IDENTIFIERS_TYPES'],
                  'required': True},
                  'value': {'type': 'string', 'required': True}}}}
    creator:
        marc, "035__", {'type': value['9'], 'value': value['a']}
    producer:
        json_for_marc(), {"035__9": "type", "035__a": "value"}


name:
    """Contains name information.

    Please note that MARC field for an author's name is splitted into two
    fields, `last_name` and `first_name`. The same situation occurs for
    the date fields, in JSON it is splitted into `start_year` and `end_year`.

    Required field for every installation.

    Example:
    +---------+---------------------+
    | 100__a  | Smith, John         |
    +---------+---------------------+

    In JSON represented as a dictionary.
    """

    schema:
        {'name': {'type': 'dict', 'required': True,
         'schema': {'last': {'type': 'string', 'empty': False},
                    'first': {'type': 'string', 'empty': False}}}}
    creator:
        marc, "100__", {'last': util_split(value['a'], ', ', 0),
                        'first': util_split(value['a'], ', ', 1)}
    producer:
        json_for_marc(), {"100__a": "last + ', ' + first"}


publications_list:
    """Contains list of ids of authors publications.

    TO DO: add schema for values inside list.
    """
    schema:
        {'publications_list': {'type': 'list', 'force': True,
         'required': True}}
    creator:
        marc, "900__", int(value["a"])
    producer:
        json_for_marc(), {"900__a": ""}
