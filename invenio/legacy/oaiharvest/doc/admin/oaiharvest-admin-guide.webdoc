## -*- mode: html; coding: utf-8; -*-

## This file is part of Invenio.
## Copyright (C) 2007, 2008, 2009, 2010, 2011, 2012 CERN.
##
## Invenio is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of the
## License, or (at your option) any later version.
##
## Invenio is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Invenio; if not, write to the Free Software Foundation, Inc.,
## 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

<!-- WebDoc-Page-Title: OAIHarvest Admin Guide -->
<!-- WebDoc-Page-Navtrail: <a class="navtrail" href="<CFG_SITE_URL>/help/admin<lang:link/>">_(Admin Area)_</a> -->
<!-- WebDoc-Page-Revision: $Id$ -->

<h2>Contents</h2>
<strong>1. <a href="#1">Overview</a></strong><br />
<strong>2. <a href="#2">OAI Data Harvesting</a></strong><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.1 <a href="#2.1">OAIHarvest Admin Interface</a><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.2 <a href="#2.2">oaiharvest commmand-line tool</a><br />

<a name="1"></a><h2>1. Overview</h2>

The OAI Harvest module handles metadata gathering between OAI-PMH v.2.0 compliant repositories. Metadata exchange is performed on top of the <a href="http://www.openarchives.org/pmh/">OAI-PMH</a>, the Open Archives Initiative's Protocol for Metadata Harvesting.
The OAI Harvest Admin Interface can be used to set up a database of OAI sources and open your repository for OAI harvesting.
<br />

<a name="2"></a><h2>2. OAI Data Harvesting</h2>

<p>In order to periodically harvest metadata from one or several repositories, it is possible to organize OAI sources through the <a href="<CFG_SITE_URL>/admin/oaiharvest/oaiharvestadmin.py<lang:link/>">OAI Harvest Admin Interface</a>.
The interface allows the administrator to add new repositories as well as edit and delete existing ones.
Once defined, run the <code>oaiharvest</code> command-line tool to start periodical harvesting of these repositories based on your settings.</p>
<p>(Note that you can <b>alternatively</b> use the <code>oaiharvest</code> command-line tool to perform a manual harvesting of a repository independently of the settings in OAI Harvest admin interface, and save the result into a file. This lets you specify the OAI arguments for the harvesting (verb, dates, sets, metadata format, etc.). You would then need to run <code>bibconvert</code> and <code>bibupload</code> to integrate the harvested records into your repository. This method can be useful to play with repositories, or for writing custom harvesting scripts, but it is not recommended for periodical harvesting. Run <code>oaiharvest -h</code> for additional information.)</p>

<a name="2.1"></a><h4>2.1 OAI Harvest Admin Interface</h4>

<b>Add OAI sources</b><br />
<p>The first step requires the administrator to enter the baseURL of the OAI repository. This is done for validation purposes - i.e. to check that the baseURL actually points to an OAI-compliant repository.
(Note: the validation simply performs an 'Identify' query to the baseURL and parses the reply with crucial tags such as <code>OAI-PMH</code> and <code>Identify</code>).
<br />Once the baseURL is validated, the administrator is required to fill into the following fields:
<br /><ul>
<li><strong>Source name</strong>: this will be the (alphanumeric) name used to refer to this OAI repository.</li>
<li><strong>Metadata prefix</strong>: upon validation the baseURL is checked for the available metadata formats. The administator can choose the desired format to harvest metadata in.</li>
<li><strong>Sets</strong>: upon validation the baseURL is checked for the available sets of the repository. The administator can choose the desired sets to harvest. If none is checked, all records are harvested. Otherwise selective harvesting for checked sets is done.</li>
<li><strong>Frequency</strong>: how often do you intend to harvest from this repository? (Note: selecting "never" excludes this source from automatic periodical harvesting)</li>
<li><strong>Starting date</strong>: on your first harvesting session, do you intend to harvest the whole repository (from beginning) or only newly added material (from today)? (WARNING: harvesting large collections of material may take very long!)</li>
<li><strong>Postprocess</strong>: how is the harvested material be dealt with after harvesting? You can choose among several action to be taken after harvesting records:
<ul>
<li>c: convert - harvested metadata will be converted (given BibConvert config file) and saved locally - this is useful when harvested metadata is in a format different from marcxml (e.g. oai_dc)</li>
<li>r: extract references - attempt to download full-text pdf for each record and run refextract to add references to resulting MARCXML</li>
<li>p: extract plots - attempt to download material (like tarballs) for each record and extract plots (only from LaTeX sources) to attach with FFT to resulting MARXML</li>
<li>t: attach full-text - attempt to download full-text for each record and add it as FFT upload in resulting MARCXML</li>
<li>f: filter - useful when you want to filter harvested data in some non-trivial way before uploading</li>
<li>u: upload - metadata will be automatically queued for upload (this is useful when harvested metadata is already in marcxml format)</li>
</ul>Note: Select none of the above to only harvest records
</li>
<li><strong>BibConvert configuration file</strong>: if postprocess involves conversion, the filename of an existing BibConvert configuration file (or its full path if file is not in standard BibConvert config directory) is needed.
This file determines how the metadata conversion will take place (e.g. oai_dc to marcxml).
In order to ensure that the configuration file performs the desired conversion, please test it in advance and follow the instruction contained in the <a href="<CFG_SITE_URL>/help/admin/bibconvert-admin-guide<lang:link/>">BibConvert Admin Guide</a>.
Please note that some conversion parameters previously input at the command line can now be handled by the BibConvert Configuration Language (namely record separator, file header and file footer). Please consult the <a href="<CFG_SITE_URL>/help/admin/bibconvert-admin-guide<lang:link/>">BibConvert Admin Guide</a> for more information on this.
This allows fully automatised harvesting and conversion (and possibly upload) of records provided a valid, functioning, BibConvert template is provided.</li>
<li><strong>BibFilter program file</strong>: if postprocess involves filtering, the full path of an existing BibFilter script is needed.
This file determines how the harvested records should be filtered. It should produce 4 different MARXML outputs:
<ul>
<li>*.insert.xml: full records will be uploaded with "-i" parameter, new record</li>
<li>*.append.xml: record snippets will be uploaded with "-a" parameter, record additions</li>
<li>*.correct.xml: record snippets will be uploaded with "-c" parameter, record corrections</li>
<li>*.holdingpen.xml: full records will be uploaded with "-o" parameter, to Holding Pen</li>
</ul>
Please refer to <a href="<CFG_SITE_URL>/help/admin/bibupload-admin-guide<lang:link/>">BibUpload Admin Guide</a> for more information in BibUpload parameters. In order to ensure that the program performs the desired actions, please test it in advance.
</ul>

<b>Edit and delete OAI sources</b><br />
<p>Once a source has been added to the database, it will be visible in the overview page, as shown below</p>
   <div class="pagebody">
           <table class="admin_wvar_nomargin" summary="">
            <tr>
             <th class="adminheader">name</th>
             <th class="adminheader">baseURL</th>
             <th class="adminheader">metadataprefix</th>
             <th class="adminheader">frequency</th>
             <th class="adminheader">bibconvertfile</th>
             <th class="adminheader">postprocess</th>
             <th class="adminheader">actions</th>
            </tr>
            <tr>
             <td class="admintdright">cds</td>
             <td class="admintdleft">http://cds.cern.ch/oai2d</td>
             <td class="admintdleft">marcxml</td>
             <td class="admintdleft">daily</td>
             <td class="admintdleft">NULL</td>
             <td class="admintdleft">h-u</td>
             <td class="admintdleft">edit / delete / test / history / harvest</td>
             <td rowspan="4" style="vertical-align: bottom">
             </td>
            </tr>
            </table>

   </div>
<p>At this point it will be possible to edit the definition of this source by clicking on the appropriate action button. All the fields described in 2.2.1 can be modified (except for the Starting date).
There is no more validation at this stage, hence, please take extra care when editing important fields such as baseurl and metadataprefix.
<br />
OAI repositories can be removed from the database by clicking on the appropriate action button in the overview page.
</p>

<b>Testing OAI sources</b><br/>
<p>This interface provides the possibility to test OAI harvesting settings. In order to see the harvesting and postprocessing results, administrator has to provide record identifier (insige the harvested OAI source) and click "test" button.
After doing this, two new frames will appear.
The upper contatins original OAI XML harvested from the source. The second contains the result of all the postprocessing activities or an error message.</p>

<b>Viewing the harvesting history</b><br/>
<p>This page allows the administrator to see which records have been recently harvested. All the data is shown in database insertion order. If there was more than 10 inserted records during a day, only first 10 will be displayed. In order to do manipulations connected with the rest, the administrator has to proceed to day details page which is available by "View next entries..." link.</p>
<p>
The same page provides the possibility of reharvesting the records present in the past.
All have to be done in order to achieve this is selecting appropriate records by checking the checkboxes on the right side of the entry and clicking "reharvest selected records" button.
</p>

<b>Harvesting particular records</b><br/>
<p>This page provides the possibility of harvesting records manually. The administrator has to provide internal OAI source identifier. After this, record will be harvested, converted and filtered according to the source settings and scheduled to be uploaded into the database. </p>

<a name="2.2"></a><h4>2.2 oaiharvest commmand-line tool</h4>
<p>Once administrators have set up their desired OAI repositories in the database through the Admin Interface they can invoke <code>oaiharvest</code> to start up periodical harvesting.<br />
<br />
<b>Oaiharvest usage</b>
<blockquote>
<pre>
oaiharvest [options]

Manual single-shot harvesting mode:
  -o, --output         specify output file
  -v, --verb           OAI verb to be executed
  -m, --method         http method (default POST)
  -p, --metadataPrefix metadata format
  -i, --identifier     OAI identifier
  -s, --set            OAI set(s). Whitespace-separated list
  -r, --resuptionToken Resume previous harvest
  -f, --from           from date (datestamp)
  -u, --until          until date (datestamp)
  -c, --certificate    path to public certificate (in case of certificate-based harvesting)
  -k, --key            path to private key (in case of certificate-based harvesting)
  -l, --user           username (in case of password-protected harvesting)
  -w, --password       password (in case of password-protected harvesting)

Automatic periodical harvesting mode:
  -r, --repository="repo A"[,"repo B"] 	 which repositories to harvest (default=all)
  -d, --dates=yyyy-mm-dd:yyyy-mm-dd 	 reharvest given dates only

Scheduling options:
  -u, --user=USER	User name under which to submit this task.
  -t, --runtime=TIME	Time to execute the task. [default=now]
			Examples: +15s, 5m, 3h, 2002-10-27 13:57:26.
  -s, --sleeptime=SLEEP	Sleeping frequency after which to repeat the task.
			Examples: 30m, 2h, 1d. [default=no]
  -L  --limit=LIMIT	Time limit when it is allowed to execute the task.
			Examples: 22:00-03:00, Sunday 01:00-05:00.
			Syntax: [Wee[kday]] [hh[:mm][-hh[:mm]]].
  -P, --priority=PRI	Task priority (0=default, 1=higher, etc).
  -N, --name=NAME	Task specific name (advanced option).

General options:
  -h, --help		Print this help.
  -V, --version		Print version information.
  -v, --verbose=LEVEL	Verbose level (0=min, 1=default, 9=max).
      --profile=STATS	Print profile information. STATS is a comma-separated
			list of desired output stats (calls, cumulative,
			file, line, module, name, nfl, pcalls, stdname, time).

</pre>
</blockquote>

<code>oaiharvest</code> performs a number of operations on the repositories listed in the database. By default <code>oaiharvest</code> considers all repositories, one by one (this gets overridden when <code>--repository</code> argument is passed).
<br /> For each repository that is considered, <code>oaiharvest</code> behaves according to the arguments passed at the command line:
<ul>
<li> If the <code>--dates</code> argument is not passed, it checks whether an update from the repository is needed (Note: the update status is calculated based on the time of the last harvesting and the frequency chosen by the administrator).
<ul>
<li>If an update is needed, it harvests all the metadata that the repository has added since the data of the last update. When the update is finished, the last update value is set to the current time and date.
<li>If an update is not needed, the source is skipped.
</ul>
<li> If the <code>--dates</code> argument is passed, it simply harvests the metadata of the repository from/until the given dates. The last update date is left unchanged.
<li> Finally, it performs the operations indicated in the postprocess mode, i.e. convert and/or upload the harvested metadata.
</ul>
<br />
<b>Oaiharvest usage examples</b><br />
<p>In most cases, administrators will want <code>oaiharvest</code> to run in the background, i.e. run in sleep mode and wake up periodically (e.g. every 24 hours) to check whether updates are needed:</p>
<blockquote>
<pre>
$ oaiharvest -s 24h
</pre>
</blockquote>

<p>In other cases, administrators may want to perform periodical harvesting only on specific sources:
<blockquote>
<pre>
$ oaiharvest -r cds -s 12h
</pre>
</blockquote>

<p>Another option is that administrators may want to harvest from certain repositories within two specific dates. This will be regarded as a one-off operation and will not affect the last update value of the source:
<blockquote>
<pre>
$oaiharvest -r cds -d 2005-05-05:2005-05-30
</pre>
</blockquote>
